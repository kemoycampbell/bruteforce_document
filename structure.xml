<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.8.5">
  <partials/>
  <file path="BlockBruteForce.php" generated-path="BlockBruteForce.html" hash="b5030bbfd89e5af3bfd75c1ce31df81c" package="Default">
    <docblock line="0">
      <description>Created by PhpStorm.</description>
      <long-description>User: Kemoy Cambpell</long-description>
      <tag name="version" line="0" description="1.5 Date: 6/9/16&#10;Time: 1:32 PM"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="BlockBruteForce" line="13" package="Default">
      <extends/>
      <name>BlockBruteForce</name>
      <full_name>\BlockBruteForce\BlockBruteForce</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="16" package="Default">
        <name>$dbname</name>
        <full_name>\BlockBruteForce\BlockBruteForce::dbname</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="17" package="Default">
        <name>$dbusername</name>
        <full_name>\BlockBruteForce\BlockBruteForce::dbusername</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="18" package="Default">
        <name>$dbpassword</name>
        <full_name>\BlockBruteForce\BlockBruteForce::dbpassword</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="19" package="Default">
        <name>$host</name>
        <full_name>\BlockBruteForce\BlockBruteForce::host</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="20" package="Default">
        <name>$msg</name>
        <full_name>\BlockBruteForce\BlockBruteForce::msg</full_name>
        <default>null</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="21" package="Default">
        <name>$connected</name>
        <full_name>\BlockBruteForce\BlockBruteForce::connected</full_name>
        <default>false</default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="22" package="Default">
        <name>$PDO</name>
        <full_name>\BlockBruteForce\BlockBruteForce::PDO</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="23" package="Default">
        <name>$defaultDatabase</name>
        <full_name>\BlockBruteForce\BlockBruteForce::defaultDatabase</full_name>
        <default>'brute_force_login_attempts'</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="24" package="Default">
        <name>$dump</name>
        <full_name>\BlockBruteForce\BlockBruteForce::dump</full_name>
        <default>array()</default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="25" package="Default">
        <name>$sql</name>
        <full_name>\BlockBruteForce\BlockBruteForce::sql</full_name>
        <default>'kemoybrute_force_login_attempts.sql'</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="26" package="Default">
        <name>$sandbox</name>
        <full_name>\BlockBruteForce\BlockBruteForce::sandbox</full_name>
        <default>true</default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="27" package="Default">
        <name>$blockTime</name>
        <full_name>\BlockBruteForce\BlockBruteForce::blockTime</full_name>
        <default>10</default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="28" package="Default">
        <name>$blockAttempts</name>
        <full_name>\BlockBruteForce\BlockBruteForce::blockAttempts</full_name>
        <default>4</default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BlockBruteForce" line="29" package="Default">
        <name>$debugEnable</name>
        <full_name>\BlockBruteForce\BlockBruteForce::debugEnable</full_name>
        <default>true</default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="40" package="Default">
        <name>__construct</name>
        <full_name>\BlockBruteForce\BlockBruteForce::__construct()</full_name>
        <docblock line="40">
          <description>BlockBruteForce constructor. The constructor takes the array config data and initalize
the necessary variables such as hostname, username, password. Supplying database name is
optional. If a database name is not supplied, a database namely brute_force_login_attempts
will be automatically created</description>
          <long-description></long-description>
          <tag name="param" line="40" description="&lt;ul&gt;&#10;&lt;li&gt;config is an array with the necessary parameters to connect to the host mysql server&#10;The format is as follow array('dbname'=&gt;$dbname,'dbusername'=&gt;$dbusername,'dbpassword'=&gt;$dbpassword,'host'=&gt;$host)&lt;/li&gt;&#10;&lt;/ul&gt;" type="null" variable="$config">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="84" package="Default">
        <name>setBlockTime</name>
        <full_name>\BlockBruteForce\BlockBruteForce::setBlockTime()</full_name>
        <docblock line="84">
          <description>This method is used to setup the block time. By the the block time is set to 10 minutes.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;ul&gt;&#10;&lt;li&gt;desired block time in whole number&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$time"/>
          <tag name="return" line="84" description="a stdclass object is return if an error occurs" type="\stdClass">
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="115" package="Default">
        <name>setEnableDebug</name>
        <full_name>\BlockBruteForce\BlockBruteForce::setEnableDebug()</full_name>
        <docblock line="115">
          <description>This method is use to set the debug flag. The parameter must be a boolean true or false</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;ul&gt;&#10;&lt;li&gt;either true or false&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$bool"/>
          <tag name="return" line="115" description="- return stdclass object if there are any error" type="\stdClass">
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bool</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="139" package="Default">
        <name>setBlockAttempts</name>
        <full_name>\BlockBruteForce\BlockBruteForce::setBlockAttempts()</full_name>
        <docblock line="139">
          <description>This method is used to set the max attempts allowed.</description>
          <long-description></long-description>
          <tag name="param" line="139" description="&lt;ul&gt;&#10;&lt;li&gt;the max attempts allowed in whole number&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$max"/>
          <tag name="return" line="139" description="-  a stdclass object is return if an error occurs" type="\stdClass">
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="173" package="Default">
        <name>setSandbox</name>
        <full_name>\BlockBruteForce\BlockBruteForce::setSandbox()</full_name>
        <docblock line="173">
          <description>This method is used to indicate whether a developer is using the localhost for the development.</description>
          <long-description>The reason for this is to assist with get ip and return it as 127.0.0.1 when using localhost machine.
By default the sandbox is set as true</long-description>
          <tag name="param" line="173" description="&lt;ul&gt;&#10;&lt;li&gt;a true or false whether to enable sandbox. Should be off when in production&lt;/li&gt;&#10;&lt;/ul&gt;" type="boolean" variable="$bool">
            <type>boolean</type>
          </tag>
          <tag name="return" line="173" description="- return stdclass object if there are any issues." type="\stdClass">
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bool</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="202" package="Default">
        <name>connect</name>
        <full_name>\BlockBruteForce\BlockBruteForce::connect()</full_name>
        <docblock line="202">
          <description>This method used the config data supplied in the constructor and attempts to connect to the
mysql server. If the connection was not successful then a stdclass is returned detailing the error.</description>
          <long-description>If the connection was successful a true is return.</long-description>
          <tag name="return" line="202" description="- return true if the connection was successful otherwise a stdclass object with a detailed&#10;info about the error" type="boolean|\stdClass">
            <type>boolean</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="262" package="Default">
        <name>connectionStatus</name>
        <full_name>\BlockBruteForce\BlockBruteForce::connectionStatus()</full_name>
        <docblock line="262">
          <description>This method returns the connection status. If the connection has
been successful established then true is return otherwise a stdclass
with the status(header code 400) and error</description>
          <long-description></long-description>
          <tag name="return" line="262" description="- return true if the connection is established otherwise&#10;return stdClass containing the status code and error message." type="boolean|\BlockBruteForce\stdClass">
            <type>boolean</type>
            <type>\BlockBruteForce\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="289" package="Default">
        <name>readSql</name>
        <full_name>\BlockBruteForce\BlockBruteForce::readSql()</full_name>
        <docblock line="289">
          <description>This method is used to read the sql file into the table. If the file was successful read
then a true is return otherwise stdclass object with the error info</description>
          <long-description></long-description>
          <tag name="param" line="289" description="&lt;ul&gt;&#10;&lt;li&gt;the file that contains the sql with the necessary fields for the blockbruteforce&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$file"/>
          <tag name="return" line="289" description="- return true if successful read otherwise stdclass object" type="boolean|\stdClass">
            <type>boolean</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="324" package="Default">
        <name>loadDependencyDatabase</name>
        <full_name>\BlockBruteForce\BlockBruteForce::loadDependencyDatabase()</full_name>
        <docblock line="324">
          <description>This method is a put together of both createDatabase and readSql methods in order to load all necessary database
and tables with the required fields for the blockbruteforce</description>
          <long-description></long-description>
          <tag name="return" line="324" description="- return false if failure occurs otherwise true" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="354" package="Default">
        <name>updateAttempts</name>
        <full_name>\BlockBruteForce\BlockBruteForce::updateAttempts()</full_name>
        <docblock line="354">
          <description>This method is used to update the number of attempts the user has made. We only use this method if the
user has made previous failed attempt. If the update was successful then true is return and false if nothing to update.</description>
          <long-description>a stdclass is return if any errors occurs</long-description>
          <tag name="param" line="354" description="&lt;ul&gt;&#10;&lt;li&gt;the name of the user whose attempts to update&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$username"/>
          <tag name="return" line="354" description="- return true if the update was successful, false if nothing was update and stdclass object if&#10;any errors occurs" type="boolean|\stdClass">
            <type>boolean</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="429" package="Default">
        <name>verifyUsernameParameter</name>
        <full_name>\BlockBruteForce\BlockBruteForce::verifyUsernameParameter()</full_name>
        <docblock line="429">
          <description>This method is used to ensure that the username parameter is supplied</description>
          <long-description></long-description>
          <tag name="param" line="429" description="&lt;ul&gt;&#10;&lt;li&gt;the username parameter&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$username"/>
          <tag name="return" line="429" description="- return true if supplied stdclass object otherwise" type="boolean|\stdClass">
            <type>boolean</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="455" package="Default">
        <name>getLastLoginAttempt</name>
        <full_name>\BlockBruteForce\BlockBruteForce::getLastLoginAttempt()</full_name>
        <docblock line="455">
          <description>This method is used to fetch the user's last login attempt from the database. We first check to ensure that
the username is supplied. Further we ensure that the database connection is established. If we were able to find the
user's last attempt in the database, the resultset is return, false if no data was found. A stdclass object is return if any error
were occurs</description>
          <long-description></long-description>
          <tag name="param" line="455" description="&lt;ul&gt;&#10;&lt;li&gt;the username to check for last login attempt&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$username"/>
          <tag name="return" line="455" description="- resultset is returned if the result was found, false if nothing was found and stdclass object if any errors occurs" type="boolean|\stdClass">
            <type>boolean</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="514" package="Default">
        <name>deleteRecord</name>
        <full_name>\BlockBruteForce\BlockBruteForce::deleteRecord()</full_name>
        <docblock line="514">
          <description>This method is used to delete an existing record from the database. The record are only removed
if the time elapse is &gt;= block time that is defined by the developer</description>
          <long-description></long-description>
          <tag name="param" line="514" description="&lt;ul&gt;&#10;&lt;li&gt;the username to delete the record for&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$username"/>
          <tag name="return" line="514" description="- return true if successful delete, false if nothing to delete and stdclass object if any errors" type="boolean|\stdClass">
            <type>boolean</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="594" package="Default">
        <name>getMinuteElapse</name>
        <full_name>\BlockBruteForce\BlockBruteForce::getMinuteElapse()</full_name>
        <docblock line="594">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lastAttempt</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="647" package="Default">
        <name>isBlock</name>
        <full_name>\BlockBruteForce\BlockBruteForce::isBlock()</full_name>
        <docblock line="647">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="758" package="Default">
        <name>registerFailedLogin</name>
        <full_name>\BlockBruteForce\BlockBruteForce::registerFailedLogin()</full_name>
        <docblock line="758">
          <description>This method is used to register a failed attempts for a particular user in the database.</description>
          <long-description>We log the following fields, username, ip address, action time and attempts as 1</long-description>
          <tag name="param" line="758" description="&lt;ul&gt;&#10;&lt;li&gt;the username to register the failed attempt for&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$username"/>
          <tag name="return" line="758" description="return true if the data was registered, false if not and stdclass if an error occurs" type="boolean|\stdClass">
            <type>boolean</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="793" package="Default">
        <name>get_ip_address</name>
        <full_name>\BlockBruteForce\BlockBruteForce::get_ip_address()</full_name>
        <docblock line="793">
          <description>This method is used to get the ip of the user</description>
          <long-description></long-description>
          <tag name="return" line="793" description="- return stdclass if an error occurs. false if we are not able to get the address. otherwise the ip&#10;is returned" type="\BlockBruteForce\stdClass|boolean|string">
            <type>\BlockBruteForce\stdClass</type>
            <type>boolean</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="822" package="Default">
        <name>trim</name>
        <full_name>\BlockBruteForce\BlockBruteForce::trim()</full_name>
        <docblock line="822">
          <description>This method is used to trim the ip address</description>
          <long-description></long-description>
          <tag name="param" line="822" description="&lt;ul&gt;&#10;&lt;li&gt;the ip address to trim&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$ip"/>
          <tag name="return" line="822" description="- stdclass if an error occurs otherwise the trimmed ip address is returned" type="\BlockBruteForce\stdClass|string">
            <type>\BlockBruteForce\stdClass</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="851" package="Default">
        <name>validate_ip</name>
        <full_name>\BlockBruteForce\BlockBruteForce::validate_ip()</full_name>
        <docblock line="851">
          <description>This method is used to validate the ip address</description>
          <long-description></long-description>
          <tag name="param" line="851" description="&lt;ul&gt;&#10;&lt;li&gt;the ip address to validate&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$ip"/>
          <tag name="return" line="851" description="- return true if verified and false if otherwise" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="865" package="Default">
        <name>youMayLoginAgainIn</name>
        <full_name>\BlockBruteForce\BlockBruteForce::youMayLoginAgainIn()</full_name>
        <docblock line="865">
          <description>If a user is block, this method is used to state how many minutes before the user may login again</description>
          <long-description></long-description>
          <tag name="param" line="865" description="&lt;ul&gt;&#10;&lt;li&gt;the username of the user we want to notify when can login again&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$username"/>
          <tag name="return" line="865" description="- false if any user not found, stdclass if any errors and lastly the minutes before&#10;the user can login again is returned" type="boolean|integer|\stdClass">
            <type>boolean</type>
            <type>integer</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="905" package="Default">
        <name>createDatabase</name>
        <full_name>\BlockBruteForce\BlockBruteForce::createDatabase()</full_name>
        <docblock line="905">
          <description>This method is used to create a database for the blockbruteforce if the user leave the database configuration in its
default state in the config.php</description>
          <long-description></long-description>
          <tag name="return" line="905" description="- true if the database was created, false if not and stdclass object if an error occurs" type="boolean|\stdClass">
            <type>boolean</type>
            <type>\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BlockBruteForce" line="956" package="Default">
        <name>outputDebug</name>
        <full_name>\BlockBruteForce\BlockBruteForce::outputDebug()</full_name>
        <docblock line="956">
          <description>This method is used to occurs in the program. The user can enable or disable by supplying a boolean statement
as the parameter</description>
          <long-description></long-description>
          <tag name="param" line="956" description="&lt;ul&gt;&#10;&lt;li&gt;true to print the output and false othewise&lt;/li&gt;&#10;&lt;/ul&gt;" type="" variable="$bool"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bool</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="13" code="PPC:ERR-50005">No summary for class \BlockBruteForce\BlockBruteForce</error>
      <error line="594" code="PPC:ERR-50015">Argument $lastAttempt is missing from the Docblock of getMinuteElapse</error>
      <error line="594" code="PPC:ERR-50008">No summary for method getMinuteElapse()</error>
      <error line="647" code="PPC:ERR-50015">Argument $username is missing from the Docblock of isBlock</error>
      <error line="647" code="PPC:ERR-50008">No summary for method isBlock()</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $dbname</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $dbusername</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $dbpassword</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $host</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $msg</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $connected</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $PDO</error>
      <error line="23" code="PPC:ERR-50007">No summary for property $defaultDatabase</error>
      <error line="24" code="PPC:ERR-50007">No summary for property $dump</error>
      <error line="25" code="PPC:ERR-50007">No summary for property $sql</error>
      <error line="26" code="PPC:ERR-50007">No summary for property $sandbox</error>
      <error line="27" code="PPC:ERR-50007">No summary for property $blockTime</error>
      <error line="28" code="PPC:ERR-50007">No summary for property $blockAttempts</error>
      <error line="29" code="PPC:ERR-50007">No summary for property $debugEnable</error>
    </parse_markers>
    <source></source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="global" full_name="global"/>
  <namespace name="BlockBruteForce" full_name="BlockBruteForce"/>
  <deprecated count="0"/>
</project>
